// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  cpf         String       @unique
  name        String
  password    String
  created_at  DateTime     @default(now())
  updated_at  DateTime
  role        Role         @default(USER)
  gender      String
  UserAddress UserAddress?
  Purchase    Purchase[]
  dateofbirth DateTime
}

model UserAddress {
  id        String  @id @default(uuid())
  userId    String  @unique
  street    String
  number    String
  reference String?
  city      String
  state     String
  cep       String
  country   String  @default("Brasil")
  user      User    @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model Product {
  id          String     @id @default(uuid())
  description String     @unique
  price       Float
  created_at  DateTime   @default(now())
  updated_at  DateTime
  Category    Category?  @relation(fields: [categoryId], references: [id])
  categoryId  String?
  stock       Int        @default(1)
  Purchase    Purchase[]
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  products    Product[]
  created_at  DateTime  @default(now())
  updated_at  DateTime
}

model Purchase {
  id            String   @id @default(uuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  productId     String
  product       Product  @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  amount        Int      @default(1)
  totalPrice    Float
  reviewNote    Int?
  reviewComment String?
  created_at    DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
